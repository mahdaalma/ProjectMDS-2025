---
title: "DB Design"
author: "YANI PRIHANTINI HIOLA"
format: html
editor: visual
---

---
title: "PRAKTIKUM MDS 2"
author: "YANI HIOLA"
format: html
editor: visual
---

## Install Package yang diperlukan

```{r}
library(DBI)
library(RMySQL)
library(glue)
```

## 1. Konfigurasi Database DBngin

```{r}
db_config <- list(
   host = "127.0.0.1",
   port = 3306,          # Port MySQL di DBngin
   user = "root",
   password = "",
   dbname = "databaseuniv"    # Nama database yang akan dibuat
 )
```

## 2. Membuat koneksi ke MySQL server (tanpa database spesifik)

```{r}
con <- dbConnect(
  MySQL(),
  host = db_config$host,
  port = db_config$port,
  user = db_config$user,
  password = db_config$password
 )
```

## 3. Membuat database jika belum ada

```{r}
 tryCatch({
  dbExecute(con, glue("CREATE DATABASE IF NOT EXISTS {db_config$dbname}"))
  message("Database ", db_config$dbname, " berhasil dibuat/ditemukan")
 }, error = function(e) {
  message("Gagal membuat database: ", e$message)
 })
```

## 4. Membuat struktur tabel

```{r}
 table_definitions <- list(
  Wilayah = "
    CREATE TABLE IF NOT EXISTS
Wilayah (
      id_wilayah VARCHAR(15) NOT NULL PRIMARY KEY,
      nama_kabkota VARCHAR(100) NOT NULL,
      nama_prov VARCHAR(100) NOT NULL
    )
  ",
  
  Universitas = "
    CREATE TABLE IF NOT EXISTS Universitas (
      id_univ INT AUTO_INCREMENT PRIMARY KEY,
      id_wilayah VARCHAR(15) NOT NULL,
      nama_univ VARCHAR(150),
      akred_univ VARCHAR(50),
      qs_rank VARCHAR(50),
      FOREIGN KEY (id_wilayah) REFERENCES Wilayah(id_wilayah)
    )
  ",
  
  Prodi_StatHub = "
    CREATE TABLE IF NOT EXISTS Prodi_StatHub (
      id_prodi INT AUTO_INCREMENT PRIMARY KEY,
      id_univ INT,
      nama_prodi VARCHAR(150),
      jumlah_dosen INT,
      jumlah_mahasiswa INT,
      akred_prodi VARCHAR(50),
      jenjang VARCHAR(10),
      FOREIGN KEY (id_univ) REFERENCES Universitas(id_univ)
    )
  ",

  Jalur_Masuk = "
    CREATE TABLE IF NOT EXISTS Jalur_Masuk (
      id_prodi INT,
      id_univ INT,
      jalur_masuk VARCHAR(100),
      daya_tampung INT,
      website VARCHAR(255),
      FOREIGN KEY (id_prodi) REFERENCES Prodi_StatHub(id_prodi),
      FOREIGN KEY (id_univ) REFERENCES Universitas(id_univ)
    )
  "
 )
```

## 5. Eksekusi Pembuatan Tabel

```{r}
tryCatch({
  # Buka koneksi ke database spesifik
  con_db <- dbConnect(
    MySQL(),
    host = db_config$host,
    port = db_config$port,
    user = db_config$user,
    password = db_config$password,
    dbname = db_config$dbname
  )
  
  # Mulai transaksi
  dbBegin(con_db)
  
  # Buat semua tabel
  for (table_name in names(table_definitions)) {
    dbExecute(con_db, table_definitions[[table_name]])
    message("Tabel ", table_name, " berhasil dibuat")
  }
  
  # Commit transaksi
  dbCommit(con_db)
  
  # Verifikasi tabel yang dibuat
  existing_tables <- dbGetQuery(con_db, "SHOW TABLES")
  message("\nTabel yang tersedia di database ", db_config$dbname, ":")
  print(existing_tables)
  
 }, error = function(e) {
  dbRollback(con_db)
  message("Error membuat tabel: ", e$message)
 }, finally = {
  dbDisconnect(con_db)
  dbDisconnect(con)
  message("\nKoneksi database ditutup")
 })
 con_db <- dbConnect(
  MySQL(),
  host = db_config$host,
  port = db_config$port,
  user = db_config$user,
  password = db_config$password,
  dbname = db_config$dbname
 )

# Lihat struktur tabel users
 dbGetQuery(con_db, "DESCRIBE Wilayah")
 dbDisconnect(con_db)

```

## 6. Import Data

### Sambungkan ke Database MySQL

```{r}
library(DBI)
library(RMariaDB)

con_db <- dbConnect(
    MySQL(),
    host = db_config$host,
    port = db_config$port,
    user = db_config$user,
    password = db_config$password,
    dbname = db_config$dbname
  )
```

#Baca Data dari CSV

```{r}
#Universitas
univ <- read.csv("D:/Kuliah/S2/MDS/git/ProjectMDS-2025/Dataset Kelompok_2/UNIVERSITAS update.csv", stringsAsFactors = FALSE)
head(univ)  # Cek apakah data terbaca dengan benar

#Jalur Masuk
jalur_masuk <- read.csv("D:/Kuliah/S2/MDS/git/ProjectMDS-2025/Dataset Kelompok_2/jalur masuk1.csv", stringsAsFactors = FALSE)
head(jalur_masuk)  # Cek apakah data terbaca dengan benar

#Prodi StatHub
prodi_stathub <- read.csv("D:/Kuliah/S2/MDS/git/ProjectMDS-2025/Dataset Kelompok_2/Prodi StatHub.csv", stringsAsFactors = FALSE)
head(prodi_stathub)  # Cek apakah data terbaca dengan benar

#Wilayah
wilayah <- read.csv("D:/Kuliah/S2/MDS/git/ProjectMDS-2025/Dataset Kelompok_2/wilayah.csv", stringsAsFactors = FALSE)
head(wilayah)  # Cek apakah data terbaca dengan benar
```

#Masukkan Data ke MySQL

```{r}
library(DBI)

#Wilayah
for (i in 1:nrow(wilayah)) {
  query <- sprintf("INSERT INTO Wilayah (id_wilayah, Nama_Kabkota, nama_prov) VALUES ('%s', '%s', '%s')",           wilayah$id_wilayah[i], wilayah$Nama_Kabkota[i], wilayah$nama_prov[i])
  dbExecute(con_db, query)
}

#Universitas
for (i in 1:nrow(univ)) {
  query <- sprintf("INSERT INTO Universitas (id_univ, id_wilayah, nama_univ, akred_univ, qs_rank) VALUES ('%s', '%s', '%s', '%s', '%s')",           univ$id_univ[i], univ$id_wilayah[i], univ$nama_univ[i], univ$akred_univ[i],univ$qs_rank[i])
  dbExecute(con_db, query)
}

#Prodi
for (i in 1:nrow(prodi_stathub)) {
  query <- sprintf("INSERT INTO prodi_stathub (id_prodi, id_univ, nama_prodi, jumlah_dosen, jumlah_mahasiswa, akred_prodi, jenjang) VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s')",           prodi_stathub$id_prodi[i], prodi_stathub$id_univ[i], prodi_stathub$nama_prodi[i], prodi_stathub$jumlah_dosen[i], prodi_stathub$jumlah_mahasiswa[i], prodi_stathub$akred_prodi[i], prodi_stathub$jenjang[i])
  dbExecute(con_db, query)
}

#Jalur Masuk
for (i in 1:nrow(jalur_masuk)) {
  query <- sprintf("INSERT INTO jalur_masuk (id_prodi, id_univ, jalur_masuk, daya_tampung, website) VALUES ('%s', '%s', '%s', '%s', '%s')",
jalur_masuk$id_prodi[i], jalur_masuk$id_univ[i], jalur_masuk$jalur_masuk[i], jalur_masuk$daya_tampung[i], jalur_masuk$website[i])
  dbExecute(con_db, query)
}

```

#### Tambahan

```{r}
#Rename Tabel
dbExecute(con_db, "ALTER TABLE Universitas CHANGE nama_dept nama_univ VARCHAR(150);")

#Ganti Tipe Data
dbExecute(con_db, "ALTER TABLE Wilayah MODIFY COLUMN id_wilayah FLOAT;")

#Menghapus semua isi kolom pada tabel tertentu
dbExecute(con_db, "DELETE FROM jalur_masuk")

# Menghapus Karakter Tidak Valid
## Baca CSV
jalur_masuk <- read.csv("D:/Kuliah/S2/MDS/git/ProjectMDS-2025/Dataset Kelompok_2/jalur masuk1.csv", stringsAsFactors = FALSE)

## Bersihkan karakter yang tidak valid di setiap kolom
jalur_masuk[] <- lapply(jalur_masuk, function(x) iconv(x, from = "latin1", to = "ASCII", sub = ""))

## Simpan kembali file CSV yang sudah bersih (opsional)
write.csv(jalur_masuk, "jalur_masuk_clean.csv", row.names = FALSE)
```
